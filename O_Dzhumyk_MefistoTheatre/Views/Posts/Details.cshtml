@model O_Dzhumyk_MefistoTheatre.ViewModels.Posts.PostDetailsViewModel

@{
    ViewData["Title"] = Model.Title;
}

<div class="container py-4 py-lg-5">
    <article class="card shadow-sm border-0 rounded-lg">
        <header class="card-header bg-white py-3 px-4">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-start gap-3">
                <div>
                    <h1 class="card-title fs-2 fw-bold mb-1 text-dark">@Model.Title</h1>
                    <div class="post-meta d-flex flex-wrap align-items-center gap-3 text-muted small">
                        <a asp-action="Index" asp-route-category="@Model.CategoryName" class="badge bg-primary bg-opacity-75 text-white text-decoration-none px-2 py-1">
                            <i class="bi bi-tag me-1"></i>@Model.CategoryName
                        </a>
                        <div class="d-flex align-items-center">
                            <i class="bi bi-person-circle me-1"></i>
                            @if (ViewData["AuthorId"] != null)
                            {
                                <p class="text-decoration-none text-primary fw-medium">
                                    @Model.AuthorFullName
                                </p>
                            }
                            else
                            {
                                <span class="fw-medium text-dark">@Model.AuthorFullName</span>
                            }
                        </div>
                        <div class="d-flex align-items-center">
                            <i class="bi bi-calendar3 me-1"></i>
                            <time datetime="@Model.CreatedAt.ToString("yyyy-MM-dd")">@Model.CreatedAt.ToString("MMM d, yyyy")</time>
                        </div>
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="d-flex align-items-center fst-italic">
                                <i class="bi bi-pencil me-1"></i>
                                <time datetime="@Model.UpdatedAt.Value.ToString("yyyy-MM-dd")">
                                    Updated @Model.UpdatedAt.Value.ToString("MMM d, yyyy")
                                </time>
                            </div>
                        }
                    </div>
                </div>
                <div class="d-flex gap-2 flex-shrink-0 mt-2 mt-md-0">
                    @if (Model.CanEditPost)
                    {
                        <div class="action-buttons">
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-secondary btn-sm">
                                <i class="bi bi-pencil-square me-1"></i> Edit Post
                            </a>
                        </div>
                    }
                    @if (Model.CanDeletePost)
                    {
                        <div class="action-buttons">
                            <button onclick="confirmDeletePost(@Model.Id)" class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-trash me-1"></i> Delete Post
                            </button>
                        </div>
                    }
                </div>
            </div>
        </header>

        <div class="card-body p-4 p-lg-5">
            <div class="post-content mb-5">
                <div class="content-wrapper fs-5 lh-lg text-dark">
                    @Html.Raw(Model.Content)
                </div>
            </div>

            <hr class="my-5">

            <section class="comments-section">
                <div class="d-flex align-items-center mb-4">
                    <h6 class="mb-0 me-2 fs-4 fw-semibold text-dark">
                        <i class="bi bi-chat-square-text me-2 opacity-75"></i>Comments
                    </h6>
                    <span class="badge bg-secondary rounded-pill">@Model.Comments.Count</span>
                </div>

                @if (Model.Comments.Any())
                {
                    <div class="comment-list mb-4">
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="comment-card mb-3 border rounded p-3">
                                <div class="d-flex justify-content-between flex-wrap gap-2 align-items-start">
                                    <div class="user-info d-flex align-items-center gap-2">
                                        <div class="rounded-circle bg-secondary bg-opacity-10 text-secondary d-flex align-items-center justify-content-center"
                                             style="width: 35px; height: 35px;">
                                            <i class="bi bi-person"></i>
                                        </div>
                                        <div>
                                            <strong>
                                                <a asp-controller="Profile" asp-action="ViewProfile" asp-route-id="@comment.AuthorId"
                                                   class="text-decoration-none text-primary">
                                                    @comment.AuthorFullName
                                                </a>
                                            </strong>
                                            <div class="text-muted small">
                                                <i class="bi bi-clock me-1"></i>
                                                <time datetime="@comment.CreatedAt.ToString("yyyy-MM-ddTHH:mm")">
                                                    @comment.CreatedAt.ToString("MMM d, yyyy 'at' h:mm tt")
                                                </time>
                                            </div>
                                        </div>
                                    </div>
                               @if (comment.CanDelete)
                                        {
                                            <div class="ms-md-auto">
                                                 @* Ensure onclick passes comment ID and post ID correctly *@
                                                <button class="btn btn-sm btn-outline-danger"
                                                        onclick="confirmDelete(@comment.Id, @Model.Id)">
                                                    <i class="bi bi-trash me-1"></i>Delete
                                                </button>
                                            </div>
                                        }
                                </div>
                                <p class="card-text mb-0 mt-2 ps-2 pt-1 border-start border-2 border-light">
                                    @comment.Content
                                </p>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center p-4 mb-4 border-0">
                        <i class="bi bi-chat-square text-secondary fs-3 mb-2 d-block"></i>
                        <p class="mb-0">No comments yet. Be the first to share your thoughts!</p>
                    </div>
                }

                <div class="add-comment mt-4 pt-4 border-top">
                    @if (User.Identity != null && User.Identity.IsAuthenticated)
                    {
                        if (Model.IsUserSuspended)
                        {
                            <div class="alert alert-warning border-0 d-flex align-items-center">
                                <i class="bi bi-exclamation-triangle-fill fs-4 me-3 flex-shrink-0"></i>
                                <div>
                                    <h5 class="alert-heading fs-6 fw-semibold">Account Suspended</h5>
                                    <p class="mb-0 small">Your account is currently suspended. You cannot post comments at this time.</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <form asp-action="AddComment" method="post">
                                <input type="hidden" name="postId" value="@Model.Id" />
                                <div class="mb-3">
                                    <label for="commentContent" class="form-label visually-hidden">Add your comment</label>
                                    <textarea id="commentContent" name="content" class="form-control" rows="4"
                                              placeholder="Share your thoughts..."
                                              aria-label="Comment content" required></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send me-2"></i>Post Comment
                                </button>
                            </form>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info border-0 d-flex align-items-center">
                            <i class="bi bi-info-circle-fill fs-4 me-3 text-primary flex-shrink-0"></i>
                            <div>
                                <h5 class="alert-heading fs-6 fw-semibold">Join the conversation</h5>
                                <p class="mb-1 small">
                                    Please <a asp-controller="Auth" asp-action="Login"
                                              asp-route-returnUrl="@Url.Action("Details", new { id = Model.Id })"
                                              class="fw-bold alert-link">log in</a>
                                    to add a comment.
                                </p>
                                <p class="mb-0 small">
                                    Don't have an account?
                                    <a asp-controller="Auth" asp-action="Register"
                                       asp-route-returnUrl="@Url.Action("Details", new { id = Model.Id })"
                                       class="fw-bold alert-link">Register here</a>.
                                </p>
                            </div>
                        </div>
                    }
                </div>
            </section>
        </div>
    </article>
</div>

<script>
    function confirmDelete(commentId, postId) {
         if (confirm("Are you sure you want to delete this comment? This action cannot be undone.")) {
             var form = document.createElement("form");
             form.method = "POST";
             // Construct the action URL with the commentId in the path
             form.action = `/Posts/DeleteComment/${commentId}`; // Use template literal for clarity


             // Input for postId (goes in the form body)
             var postInput = document.createElement("input");
             postInput.type = "hidden";
             postInput.name = "postId"; // Matches the parameter in DeleteCommentInputModel
             postInput.value = postId;
             form.appendChild(postInput);

             // Input for AntiForgeryToken (goes in the form body)
             var tokenEl = document.querySelector('input[name="__RequestVerificationToken"]');
             if (tokenEl) {
                 var tokenInput = document.createElement("input");
                 tokenInput.type = "hidden";
                 tokenInput.name = "__RequestVerificationToken";
                 tokenInput.value = tokenEl.value;
                 form.appendChild(tokenInput);
             } else {
                 console.error("Anti-forgery token not found.");
                 alert("Error: Could not verify request security token. Please refresh the page."); // Inform user
                 return; // Stop submission
             }

             document.body.appendChild(form);
             form.submit();
         }
     }

    function confirmDeletePost(postId) {
        if (confirm("Are you sure you want to delete this post? This action cannot be undone.")) {
            var form = document.createElement("form");
            form.method = "POST";
            form.action = "@Url.Action("DeletePost", "Posts")"; // Ensure this action exists in your controller

            var postIdInput = document.createElement("input");
            postIdInput.type = "hidden";
            postIdInput.name = "id"; // The parameter name in your DeletePost action
            postIdInput.value = postId;

            var tokenEl = document.querySelector('input[name="__RequestVerificationToken"]');
            if (tokenEl) {
                var tokenInput = document.createElement("input");
                tokenInput.type = "hidden";
                tokenInput.name = "__RequestVerificationToken";
                tokenInput.value = tokenEl.value;
                form.appendChild(tokenInput);
            } else {
                console.error("Anti-forgery token not found.");
                return;
            }

            form.appendChild(postIdInput);
            document.body.appendChild(form);
            form.submit();
        }
    }
</script>

<style>
    /* Ensure images within the post content are responsive and styled */
    .content-wrapper img {
        max-width: 100%;
        height: auto;
        border-radius: 0.375rem; /* Bootstrap's default border radius */
        margin-top: 0.5rem;
        margin-bottom: 1rem;
    }

    /* Add subtle hover effect to comment author links */
    .user-info a:hover {
        text-decoration: underline;
    }
</style>